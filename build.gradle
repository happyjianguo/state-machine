buildscript {
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath("io.spring.gradle:dependency-management-plugin:${gradleDMVersion}")
    }
}

plugins {
    id 'application'
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'
    id 'com.gradle.build-scan' version '2.0.2'
}


apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

group 'com.lab'
version = new Date().format('yyyyMMdd') + '-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

mainClassName = 'com.lab.stateMachine.StatusApp'


jar {
    archivesBaseName = 'state-machine'
    description = '状态机样例程序'
}

repositories {
    jcenter()
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    mavenCentral()
}

dependencies {
    compile "org.springframework.boot:spring-boot:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-aop:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-autoconfigure:${springBootVersion}"
    compile "org.springframework.statemachine:spring-statemachine-core:2.1.3.RELEASE"

    compile "mysql:mysql-connector-java:8.0.16"

    compile "org.apache.commons:commons-lang3:3.9"
    compile "commons-io:commons-io:2.6"
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    }
}

wrapper {
    gradleVersion = '5.5.1'
}


tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs << "-Xlint:unchecked"
    options.compilerArgs << "-Xlint:deprecation"
}

tasks.withType(Test) {
    testLogging {
        events 'started', 'passed'
    }
}

compileJava {
    options.compilerArgs << '-Xlint:deprecation' << '-Xlint:unchecked'
}

test {
    testLogging.showStandardStreams = true
    useJUnitPlatform()
}



